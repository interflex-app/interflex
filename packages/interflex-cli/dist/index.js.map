{"version":3,"sources":["../src/index.ts","../src/cli.ts"],"sourcesContent":["#! /usr/bin/env node\n\nimport path from \"path\";\nimport { configSchema } from \"interflex-core\";\nimport { error } from \"./cli\";\nimport jitiFactory from \"jiti\";\nimport { transform } from \"sucrase\";\n\nconst main = async () => {\n  const configFilePath = path.resolve(process.cwd(), \"interflex.config.ts\");\n\n  const configRaw = jitiFactory(process.argv[1], {\n    interopDefault: true,\n    transform: (opts) => {\n      return transform(opts.source, {\n        transforms: [\"typescript\", \"imports\"],\n      });\n    },\n  })(configFilePath);\n\n  const config = configSchema.safeParse(configRaw);\n\n  if (!config.success) {\n    return error(\"Could not parse the config file.\");\n  }\n\n  console.log(config.data, process.argv);\n};\n\nawait main();\n","export const error = (message: string) => {\n  console.error(`[ERROR]: ${message}`);\n\n  process.exit(1);\n};\n"],"mappings":";AAEA,OAAOA,MAAU,OACjB,OAAS,gBAAAC,MAAoB,iBCHtB,IAAMC,EAASC,GAAoB,CACxC,QAAQ,MAAM,YAAYA,GAAS,EAEnC,QAAQ,KAAK,CAAC,CAChB,EDCA,OAAOC,MAAiB,OACxB,OAAS,aAAAC,MAAiB,UAE1B,IAAMC,EAAO,SAAY,CACvB,IAAMC,EAAiBC,EAAK,QAAQ,QAAQ,IAAI,EAAG,qBAAqB,EAElEC,EAAYL,EAAY,QAAQ,KAAK,CAAC,EAAG,CAC7C,eAAgB,GAChB,UAAYM,GACHL,EAAUK,EAAK,OAAQ,CAC5B,WAAY,CAAC,aAAc,SAAS,CACtC,CAAC,CAEL,CAAC,EAAEH,CAAc,EAEXI,EAASC,EAAa,UAAUH,CAAS,EAE/C,GAAI,CAACE,EAAO,QACV,OAAOE,EAAM,kCAAkC,EAGjD,QAAQ,IAAIF,EAAO,KAAM,QAAQ,IAAI,CACvC,EAEA,MAAML,EAAK","names":["path","configSchema","error","message","jitiFactory","transform","main","configFilePath","path","configRaw","opts","config","configSchema","error"]}